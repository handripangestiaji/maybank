<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
 
class elasticsearch_model extends CI_Model
{
    public $port = 9200;
    public $host;
    private $client;

    public function __construct(){
        parent::__construct();
        $this->client= new Elasticsearch\Client();
	$host = base_url();
    }
	
    public function PutIndex($name)
    {
        $indexParams['index']  = $name;
	$ret = $this->client->indices()->create($indexParams);  
        return $ret;
    }
    
    public function TypeMapping($index,$type,$value){
        // Set the index and type
        $params['index'] = $index;
        $params['type']  = $type;
        
        // Adding a new type to an existing index
        $myMapping = array(
            '_source' => array(
                'enabled' => true
            ),
            'properties' => $value
        );
        $params['body'][$type] = $myMapping;
        
        // Update the index mapping
        $ret = $this->client->indices()->putMapping($params);
        return $ret;
    }
    
    public function GetMapping($index){
        $params['index'] = $index;
        $ret = $this->client->indices()->getMapping($params);
        return $ret;
    }
    
    public function GetDoc($index,$type,$id){
        $params['index'] = $index;
        $params['type'] = $type;
        $params['id'] = $id;
        
        $ret = $this->client->get($params);
        print_r($ret);
        die();
    }
    
    public function InsertDoc($index,$type,$id,$value){
        $params = array();
        $params['body']  = $value;
        $params['index'] = $index;
        $params['type']  = $type;
	$params['id'] = $id;
        
        // Document will be indexed to my_index/my_type/<autogenerated_id>
        $ret = $this->client->index($params);
        return $ret;
    }
    
    public function Bulk($value){
        $ret = $this->client->bulk($value);
        return $ret;
    }
    
    public function DeleteIndex($index){
	$deleteParams['index'] = $index;
	$this->client->indices()->delete($deleteParams);
    }
    
    public function GlobalSearch($index,$type,$query){
	$params['index'] = $index;
	$params['type'] = $type;
	
	//$params['fields'] = array('post_content','name');
	//$params['body']['query'] = $query;
	$params['q'] = $query;
	$params['size'] = 1000;
	$results = $this->client->search($params);
	return $results;
    }
    
    public function PutMapping($index,$type,$value){
	$params['index'] = $index;
	$params['type']  = $type;
	$params['body'][$type] = $value;
	$ret = $this->client->indices()->putMapping($params);
    }
    
    public function DeleteType($index,$type){
	$deleteParams['index'] = $index;
	$deleteParams['type'] = $type;
	$this->client->indices()->delete($deleteParams);
    }
}
?>
